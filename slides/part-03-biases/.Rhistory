"Yes", "Yes", "No", "Yes", "Yes"),
c("Instrument", "QOB", "QOB",
"Q4", "Q4", "QOB")))
no_iv_reg <- lm(lnw ~ s, data = df)
no_iv_reg_full <- lm(lnw ~ s + yob + sob + qob, data = df)
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
omit = c("sob*", "yob*"),
type = "text",
out = "ak91_iv_regs.txt",
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
a <- stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
omit = c("sob*", "yob*"),
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
omit = c("sob*", "yob*"),
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit.stat = c("F"),
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
)
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
omit = c("sob", "yob"),
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit.stat = c("F"),
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
)
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
omit = c("sob", "yob"),
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit.stat = c("F"))
# add.lines = list(c("State Fixed Effects?",
#                    "No", "Yes", "Yes",
#                    "No", "Yes", "Yes"),
#                  c("Instrument",
#                    "None", "QOB", "QOB",
#                    "Q4", "Q4", "QOB")))
)
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
# omit = c("sob", "yob"),
# omit.labels = c("sob", "yob"),
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit.stat = c("F"),
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
)
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
omit = c("sob", "yob"),
omit.labels = c("sob", "yob"))
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit = c("sob", "yob"),
omit.labels = c("sob", "yob"),
omit.stat = c("F"))
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit = c("sob", "yob"),
omit.labels = c("sob", "yob"),
omit.stat = c("F"),
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
)
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
type = "text", no.space = T,
out = "ak91_iv_regs.txt",
omit = c("sob", "yob"),
omit.labels = c("sob", "yob"),
omit.stat = c("F", "ser"),
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
)
no_iv_reg <- lm(lnw ~ s, data = df)
no_iv_reg_full <- lm(lnw ~ s + yob + sob, data = df)
iv_q4_reg <- ivreg(lnw ~ yob + s | . - s + q4, data = df)
iv_q4_reg_full <- ivreg(lnw ~ yob + sob + s | . - s + q4, data = df)
iv_allQ_reg <- ivreg(lnw ~ yob + sob + s | . - s + qob, data = df)
a <- capture.output(
stargazer(no_iv_reg, no_iv_reg_full, second_stage,
iv_q4_reg, iv_q4_reg_full, iv_allQ_reg,
type = "text", # no.space = T,
out = "ak91_iv_regs.txt",
omit = c("sob", "yob"),
# omit.labels = c("sob", "yob"),
omit.stat = c("F", "ser"),
add.lines = list(c("State Fixed Effects?",
"No", "Yes", "Yes",
"No", "Yes", "Yes"),
c("Instrument",
"None", "QOB", "QOB",
"Q4", "Q4", "QOB")))
)
agg_df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob),
mean_lw = mean(lnw))
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
df <- read_dta('datasets/ak_91_iv_qob.dta') %>%
mutate(reg_wage = exp(lnw))
agg_df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob),
mean_lw = mean(lnw))
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
df <- read_dta('./../datasets/ak_91_iv_qob.dta') %>%
mutate(reg_wage = exp(lnw))
agg_df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob),
mean_lw = mean(lnw))
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
ggplot(agg_df, aes(x = yob_qob, y = mean_lnw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
agg_df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob),
mean_lnw = mean(lnw))
ggplot(agg_df, aes(x = yob_qob, y = mean_lnw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
ggplot(agg_df, aes(x = yob_qob, y = mean_lnw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob, fill = qob))
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob,
fill = factor(qob)))
ggplot(agg_df, aes(x = yob_qob, y = mean_lnw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob,
fill = factor(qob)))
?scale_x_discrete
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob,
fill = factor(qob))) +
scale_x_discrete(labels = abbreviate)
levels(agg_df$yob_qob)
levels(agg_df$yob_qob)
unique(agg_df$yob_qob)
str_detect(agg_df$yob_qob, "_1")
library(stringr)
str_detect(agg_df$yob_qob, "_1")
library(tidyverse)
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob,
fill = factor(qob))) +
scale_x_discrete(labels = agg_df$yob_qob[str_detect(agg_df$yob_qob, "_1")])
ggplot(agg_df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob,
fill = factor(qob))) +
scale_x_discrete(breaks = agg_df$yob_qob[str_detect(agg_df$yob_qob, "_1")])
ggplot(agg_df, aes(x = yob_qob, y = mean_lnw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob,
fill = factor(qob))) +
scale_x_discrete(breaks = agg_df$yob_qob[str_detect(agg_df$yob_qob, "_1")])
df <- read_csv('datasets/dd_banks.csv')
df <- df %>%
mutate(date_cal = as.Date(date, origin = "1900-01-01")) %>%
select(-weekday, -day, -month, -year) %>%
gather(measure, val, -date_cal, -date) %>%
mutate(log_val = log(val),
type = ifelse(measure %in% c("bio6", "bio8"),
"bio", "bib"))
df <- read_csv('./../datasets/dd_banks.csv')
?knn
knitr::opts_chunk$set(echo = TRUE, warning = F, error = F, message = F)
library(class)
head(iris3)
head(iris)
train <- rbind(iris3[1:25,,1], iris3[1:25,,2], iris3[1:25,,3])
test <- rbind(iris3[26:50,,1], iris3[26:50,,2], iris3[26:50,,3])
head(train)
cl <- factor(c(rep("s",25), rep("c",25), rep("v",25)))
knn(train, test, cl, k = 3, prob=TRUE)
airquality %>% head()
train_sample <- sample(seq(3), nrow(df), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, 1, 0)) %>%
drop_na()
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na()
train_sample <- sample(seq(3), nrow(df), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train, test, cl = train$high_temp)
knn_preds <- knn(train, test, cl = train$high_temp, k = 4)
head(train)
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na() %>%
select(-Month, -Day)
train_sample <- sample(seq(3), nrow(df), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train, test, cl = train$high_temp, k = 4)
knn_preds <- knn(train %>% select(-high_temp),
test,
cl = train$high_temp, k = 4)
knn_preds <- knn(train %>% select(-high_temp),
test%>% select(-high_temp),
cl = train$high_temp, k = 4)
knn_preds
knn_preds <- knn(train %>% select(-high_temp),
test%>% select(-high_temp),
cl = train$high_temp,
k = 4)
table(knn_preds, df$Increase[!stocksTrain])
table(knn_preds, test$high_temp)
?table
train_sample <- sample(seq(3), nrow(iris), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-Species),
test%>% select(-Species),
cl = train$Species,
k = 4)
head(train)
df <- iris
train_sample <- sample(seq(3), nrow(iris), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-Species),
test%>% select(-Species),
cl = train$Species,
k = 4)
table(knn_preds, test$high_temp)
table(knn_preds, test$Species)
mean(knn_preds == test$high_temp)
knn_preds == test$high_temp
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na() %>%
select(-Month, -Day)
train_sample <- sample(seq(3), nrow(df), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-high_temp),
test%>% select(-high_temp),
cl = train$high_temp,
k = 4)
table(knn_preds, test$high_temp)
mean(knn_preds == test$high_temp)
mean(knn_preds == test$Species)
df <- iris
train_sample <- sample(seq(3), nrow(iris), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-Species),
test%>% select(-Species),
cl = train$Species,
k = 4)
table(knn_preds, test$Species)
mean(knn_preds == test$Species)
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na() %>%
select(-Month, -Day)
train_sample <- sample(seq(3), nrow(df), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-high_temp),
test%>% select(-high_temp),
cl = train$high_temp,
k = 4)
# measure performance
table(knn_preds, test$high_temp)
mean(knn_preds == test$high_temp)
knn.cv(df, cl = df$high_temp, k = 2)
knn.cv(df %>% select(high_temp),
cl = df$high_temp, k = 2)
knn.cv(df %>% select(high_temp),
cl = df$high_temp, k = 3)
train <- rbind(iris3[,,1], iris3[,,2], iris3[,,3])
train
head(train)
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na() %>%
select(-Month, -Day)
head(df)
knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 3)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 3)
mean(v_preds == df$high_temp)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 3)
mean(cv_preds == df$high_temp)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 2)
mean(cv_preds == df$high_temp)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 3)
mean(cv_preds == df$high_temp)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 4)
mean(cv_preds == df$high_temp)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 5)
mean(cv_preds == df$high_temp)
?scale
?mutate_if
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na() %>%
select(-Month, -Day) %>%
mutate_if(.funs = scale, .predicate = is.numeric)
head(df)
head(iris)
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na() %>%
select(-Month, -Day) %>%
mutate_if(.funs = scale, .predicate = is.numeric)
# important to scale!
train_sample <- sample(seq(3), nrow(df), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-high_temp),
test%>% select(-high_temp),
cl = train$high_temp,
k = 4)
# measure performance
table(knn_preds, test$high_temp)
mean(knn_preds == test$high_temp)
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 2)
mean(cv_preds == df$high_temp)
# k = 3
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 3)
mean(cv_preds == df$high_temp)
# k = 4
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 4)
mean(cv_preds == df$high_temp)
# k = 5
cv_preds <- knn.cv(df %>% select(-high_temp),
cl = df$high_temp, k = 5)
mean(cv_preds == df$high_temp)
df <- iris %>%
mutate_if(.funs = scale, .predicate = is.numeric)
# important to scale!
train_sample <- sample(seq(3), nrow(iris), r = T)
train <- df[train_sample != 3, ]
test <- df[train_sample == 3, ]
knn_preds <- knn(train %>% select(-Species),
test%>% select(-Species),
cl = train$Species,
k = 4)
table(knn_preds, test$Species)
mean(knn_preds == test$Species)
?ksmooth
library(KernSmooth)
?locpoly
?ksmooth
df <- airquality %>%
mutate(high_temp = ifelse(Temp > 75, "High", "Low")) %>%
drop_na()
box_kernel_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 0.3)
plot(box_kernel_reg)
box_kernel_reg
head(df)
df$Temp
with(cars, {
plot(speed, dist)
lines(ksmooth(speed, dist, "normal", bandwidth = 2), col = 2)
lines(ksmooth(speed, dist, "normal", bandwidth = 5), col = 3)
})
?lines
box_kernel_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 2)
box_kernel_reg
lines(box_kernel_reg)
box_kernel2_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 2)
box_kernel5_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 5)
gauss_kernel5_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'normal', bandwidth = 3)
predict(gauss_kernel5_reg)
box_kernel2_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 2,
x.points = c(0, 5, 10, 15, 20))
box_kernel2_reg
lines(box_kernel5_reg)
box_kernel2_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 2)
box_kernel5_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'box', bandwidth = 5,
x.points = c(5, 10, 15, 20))
# gaussian normal kernel
gauss_kernel5_reg <- ksmooth(x = df$Wind, y = df$Temp,
kernel = 'normal', bandwidth = 3)
with(df, {
plot(Wind, Temp)
lines(box_kernel2_reg)
lines(gauss_kernel5_reg)
})
lines(gauss_kernel5_reg, col = 5)
with(df, {
plot(Wind, Temp)
lines(box_kernel2_reg, col = 2)
lines(gauss_kernel5_reg, col = 5)
})
?locpoly
air_loclin <- locpoly(x = df$Wind, y = df$Temp,
degree = 1, bandwidth = 5)
air_loclin
air_locpoly <- locpoly(x = df$Wind, y = df$Temp,
degree = 2, bandwidth = 5)
lines(air_loclin, col = 2)
lines(air_locpoly, col = 5)
with(df, {
plot(Wind, Temp)
lines(air_loclin, col = 2)
lines(air_locpoly, col = 5)
})
?geom_path
as.data.frame(air_loclin)
ggplot(df, aes(x = Wind, y = Temp)) + geom_point() +
geom_line(as.data.frame(air_loclin), aes(x, y), color = 'red') +
geom_line(as.data.frame(air_locpoly), aes(x, y), color = 'blue')
ggplot(df, aes(x = Wind, y = Temp)) + geom_point() +
geom_line(data = as.data.frame(air_loclin), aes(x, y), color = 'red') +
geom_line(data = as.data.frame(air_locpoly), aes(x, y), color = 'blue')
ggplot(df, aes(x = Wind, y = Temp)) + geom_point() +
geom_line(data = as.data.frame(box_kernel2_reg), aes(x, y), color = 'red') +
geom_line(data = as.data.frame(gauss_kernel5_reg), aes(x, y), color = 'blue')
ggplot(df, aes(x = Wind, y = Temp)) + geom_point() +
geom_line(data = as.data.frame(air_loclin), aes(x, y), color = 'red') +
geom_line(data = as.data.frame(air_locpoly), aes(x, y), color = 'blue')
