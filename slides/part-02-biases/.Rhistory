runif(1), runif(1)))
head(df)
df <- df %>%
mutate(high_period = sample(c(0,1), nrow(df), r = T),
uber = ifelse(high_period == 1 & adopter == 1,
runif(n(), 0.5, 1), runif(n(), 0, 1)))
head(df)
head(df, 30)
df <- df %>%
mutate(high_period = sample(c(0,1), nrow(df), r = T),
uber = ifelse(high_period == 1 & adopter <= 500,
runif(n(), 0.5, 1), runif(n(), 0, 1)))
head(df)
?runif
df <- df %>%
mutate(high_period = sample(c(0,1), nrow(df), r = T),
uber = ifelse(high_period == 1 & adopter <= 500,
runif(n(), 0.5, 1), runif(n(), 0, 1)),
outcome = rnorm(n(), mean = 20) * uber)
head(df, 10)
summary(lm(outcome ~ uber))
summary(lm(outcome ~ uber, data = df))
df <- df %>%
mutate(high_period = sample(c(0,1), nrow(df), r = T),
uber = ifelse(high_period == 1 & adopter <= 500,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), mean = 20) * uber)
summary(lm(outcome ~ uber, data = df))
summary(lm(outcome ~ high_period + uber, data = df))
df <- df %>%
mutate(high_period = sample(c(0,1), nrow(df), r = T),
uber = ifelse(high_period == 1 & adopter <= 500,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), 20) + rnorm(n(), 10)*high_period)
summary(lm(outcome ~ uber, data = df))
summary(lm(outcome ~ high_period + uber, data = df))
head(df)
nrow(df)
nrow(df)/2
df <- df %>%
mutate(high_period = rep(sample(c(0,1), nrow(df)/2, r = T), 2),
uber = ifelse(high_period == 1 & adopter <= 500,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), 20) + rnorm(n(), 10)*high_period)
qplot(nrow(df), df$high_period)
qplot(1:nrow(df), df$high_period) + geom_smooth()
df <- df %>%
mutate(high_period = rep(sample(c(0,1), nrow(df)/2, r = T), 2),
uber = ifelse(high_period == 1 & adopter <= 500,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), 20) + rnorm(n(), 10)*high_period)
summary(lm(outcome ~ uber, data = df))
summary(lm(outcome ~ high_period + uber, data = df))
summary(lm(outcome ~ high_period + uber + ifelse(adopter <= 500, T, F), data = df))
summary(lm(outcome ~ uber+ ifelse(adopter <= 500, T, F), data = df))
summary(df[1:75000, ])
df <- expand.grid(adopter = seq(1000))
nrow(df)
head(df)
df <- expand.grid(adopter = seq(5000))
df <- df %>%
mutate(high_period = rep(sample(c(0,1), nrow(df)/2, r = T), 2),
uber = ifelse(high_period == 1 & adopter <= 500,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), 20) + rnorm(n(), 10)*high_period)
head(df)
head(df[2500:2600,])
head(df[2501:2600,])
head(df[2501:2600,], 15)
head(df, 15)
summary(lm(outcome ~ uber + ifelse(adopter <= 500, T, F), data = df))
df <- df %>%
mutate(high_period = rep(sample(c(0,1), nrow(df)/2, r = T), 2),
uber = ifelse(high_period == 1 & adopter <= 2500,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), 20) + rnorm(n(), 10)*high_period)
summary(lm(outcome ~ uber + ifelse(adopter <= 2500, T, F), data = df))
summary(lm(outcome ~ high_period + uber + ifelse(adopter <= 500, T, F), data = df))
df <- expand.grid(user_id = seq(5000),
adopter = if_else(user_id <= 2500, 1, 0))
df <- data_frame(user_id = seq(5000),
adopter = if_else(user_id <= 2500, 1, 0))
df <- df %>%
mutate(high_period = rep(sample(c(0,1), nrow(df)/2, r = T), 2),
uber = ifelse(high_period == 1 & adopter == 1,
# runif(n(), 0.5, 1), runif(n(), 0, 1)),
1, 0),
outcome = rnorm(n(), 20) + rnorm(n(), 10)*high_period)
summary(lm(outcome ~ uber + adopter, data = df))
summary(lm(outcome ~ high_period + uber + adopter, data = df))
summary(lm(outcome ~ uber + adopter, data = df))
knitr::opts_chunk$set(echo = TRUE, warning = F, error = F)
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(1,2))
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(1,2))
predicted_prob = runif(1000)
simple_classifer <- function(preds, cutoff) {
if_else(preds >= cutoff, 1, 0)
}
preds = runif(1000)
simple_classifer(preds, 0.5)
library(tidyverse)
simple_classifer(preds, 0.5)
TP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 1)
FP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 0)
FN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 1)
TN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 0)
sum(TP+FP+FN+TN)
roc_obj <- roc(response = actual_outcomes,
predictor = preds)
library(pROC)
roc_obj <- roc(response = actual_outcomes,
predictor = preds)
roc_obj$auc
roc_obj$auc %>% as.numeric()
?scale
plot(roc_obj)
head(iris)
nrow(iris)
preds = c(runif(500, 0, 0.5), runif(500, 0, 1))
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(1,2))
preds = c(runif(500, 0, 0.5), runif(500, 0, 1))
simple_classifer <- function(preds, cutoff) {
if_else(preds >= cutoff, 1, 0)
}
TP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 1)
FP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 0)
FN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 1)
TN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 0)
sum(TP+FP+FN+TN)
TP
matrix(c(TP, FP, FN, TN), nrow = 2)
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("TP", "FP")))
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
library(pROC)
roc_obj <- roc(response = actual_outcomes,
predictor = preds)
plot(roc_obj)
roc_obj$auc
roc_obj$auc %>% as.numeric()
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(2,1))
preds = c(runif(500, 0, 0.5), runif(500, 0, 1))
simple_classifer <- function(preds, cutoff) {
if_else(preds >= cutoff, 1, 0)
}
TP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 1)
FP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 0)
FN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 1)
TN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 0)
sum(TP+FP+FN+TN)
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
library(pROC)
roc_obj <- roc(response = actual_outcomes,
predictor = preds)
plot(roc_obj)
roc_obj$auc
roc_obj$auc %>% as.numeric()
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(2,1))
preds = c(runif(700, 0, 0.5), runif(300, 0, 1))
simple_classifer <- function(preds, cutoff) {
if_else(preds >= cutoff, 1, 0)
}
TP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 1)
FP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 0)
FN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 1)
TN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 0)
sum(TP+FP+FN+TN)
# see `caret` package for built-in confusion matrix
# alternatively, here is a matrix:
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(2,1))
preds = c(runif(700, 0, 0.5), runif(300, 0.5, 1))
simple_classifer <- function(preds, cutoff) {
if_else(preds >= cutoff, 1, 0)
}
TP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 1)
FP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 0)
FN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 1)
TN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 0)
sum(TP+FP+FN+TN)
# see `caret` package for built-in confusion matrix
# alternatively, here is a matrix:
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
actual_outcomes = sample(c(0,1), 1000, r = T,
prob = c(2,1))
preds = c(runif(700, 0, 0.5), runif(300, 0, 1))
simple_classifer <- function(preds, cutoff) {
if_else(preds >= cutoff, 1, 0)
}
TP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 1)
FP = sum(simple_classifer(preds, 0.5) == 1 &
actual_outcomes == 0)
FN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 1)
TN = sum(simple_classifer(preds, 0.5) == 0 &
actual_outcomes == 0)
sum(TP+FP+FN+TN)
# see `caret` package for built-in confusion matrix
# alternatively, here is a matrix:
matrix(c(TP, FP, FN, TN), nrow = 2, dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
?sample
?matrix
matrix(c(TP, FP, FN, TN), nrow = 2, byrow = T,
dimnames = list(c("predT", "predF"), c("actualT", "actualF")))
roc_obj <- roc(response = actual_outcomes,
predictor = preds)
plot(roc_obj)
roc_obj$auc
roc_obj$auc %>% as.numeric()
?roc
data(aSAH)
aSAH %>% head()
data(aSAH)
qplot(aSAH$s100b)
roc(aSAH$outcome, aSAH$s100b,
levels=c("Good", "Poor"))
caret::confusionMatrix(data = preds,
reference = actual_outcomes,
positive = 1)
?caret::confusionMatrix
caret::confusionMatrix(data = factor(preds),
reference = factor(actual_outcomes),
positive = "1")
caret::confusionMatrix(data = factor(simple_classifer(preds, 0.5)),
reference = factor(actual_outcomes),
positive = "1")
roc_obj_aSAH <- roc(aSAH$outcome, aSAH$s100b,
levels=c("Good", "Poor"))
plot(roc_obj_aSAH)
head(aSAH)
qplot(aSAH$age)
qplot(aSAH$age)
roc_obj_aSAH <- roc(aSAH$outcome, aSAH$age,
levels=c("Good", "Poor"))
plot(roc_obj_aSAH)
roc_obj_aSAH <- roc(aSAH$outcome, aSAH$s100b,
levels=c("Good", "Poor"))
plot(roc_obj_aSAH)
?prSummary
install.packages("precrec")
library(precrec)
sscurves <- evalmod(scores = aSAH$s100b, labels = aSAH$outcome)
autoplot(sscurves)
knitr::opts_chunk$set(echo = TRUE, warning = F, error = F, message = F)
library(caret)
lift_training <- twoClassSim(1000)
lift_testing  <- twoClassSim(1000)
head(lift_training)
head(lift_testing)
?twoClassSim
?caret::lift
?caret::lift.default
caret::lift(Class ~ Preds, data.frame(Class = actual_outcomes, Preds = preds))
caret::lift(Class ~ Preds, data.frame(Class = factor(actual_outcomes), Preds = preds))
lift_obj <- caret::lift(Class ~ Preds, data.frame(Class = factor(actual_outcomes), Preds = preds))
plot(lift_obj)
?lift
lift_obj <- lift(outcome ~ s100b, data = aSAH, class = "Good")
lift_obj
print(lift_obj)
caret::plot(lift_obj, value = 50)
class(lift_obj)
?plot
plot(lift_obj, value = 50)
?caret::lift
install.packages("tree")
library(tree)
?tree
library(tidyverse)
setwd('~/Dropbox/intro-ci-shortcourse/slides/')
df <- read_csv('datasets/dd_banks.csv')
head(df)
nrow(df)
df <- df %>%
mutate(date_cal = as.Date(date))
?as.Date
df <- df %>%
mutate(date_cal = as.Date(date, origin = "1900-01-01"))
head(df)
head(df) %>% print.data.frame()
df <- df %>%
mutate(date_cal = as.Date(date, origin = "1900-01-01")) %>%
select(-weekday, -day, -month, -year, -date) %>%
gather(measure, val, -date_cal) %>%
mutate(log_val = log(val))
head(df)
df <- read_csv('datasets/dd_banks.csv')
df <- df %>%
mutate(date_cal = as.Date(date, origin = "1900-01-01")) %>%
select(-weekday, -day, -month, -year) %>%
gather(measure, val, -date_cal, -date) %>%
mutate(log_val = log(val))
ggplot(df, aes(x = date, y = log_val, color = measure,
group = measure)) +
geom_point() + geom_line() + geom_vline(x = 10647)
ggplot(df, aes(x = date, y = log_val, color = measure,
group = measure)) +
geom_point() + geom_line() + geom_vline(xintercept = 10647)
ggplot(df, aes(x = date, y = log_val, color = measure,
group = measure)) +
geom_point() + geom_line() + geom_vline(xintercept = 10647)
ggplot(df, aes(x = date_cal, y = log_val, color = measure,
group = measure)) +
geom_point() + geom_line()
library(haven)
df <- read_dta('datasets/AA_schooling_small.dta')
head(df)
head(df) %>% print.data.frame()
nrow(df)
df <- read_dta('datasets/ak_91_iv_qob.dta')
head(df)
nrow(df)
qplot(df$qob)
qplot(df$qob, df$s) + geom_point(position = position_jitter(), alpha = 0.2)
qplot(df$qob, df$s) + geom_boxplot()
df <- df %>%
unite(yob_qob, yob, qob)
df <- df %>%
unite(yob_qob, yob, qob) %>%
group_by(yob_qob, mean_s = mean(s))
df <- read_dta('datasets/ak_91_iv_qob.dta')
df <- df %>%
unite(yob_qob, yob, qob, r = F) %>%
group_by(yob_qob, mean_s = mean(s))
ggplot(df, aes(x = yob_qob, y = mean_s)) + geom_point + geom_line()
df <- read_dta('datasets/ak_91_iv_qob.dta')
df <- df %>%
unite(yob_qob, yob, qob, r = F) %>%
group_by(yob_qob, mean_s = mean(s))
df <- read_dta('datasets/ak_91_iv_qob.dta')
df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob, mean_s = mean(s))
ggplot(df, aes(x = yob_qob, y = mean_s)) +
geom_point() + geom_line()
summary(df)
unique(df$yob_qob) %>% length()
df <- read_dta('datasets/ak_91_iv_qob.dta')
df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s))
nrow(df)
ggplot(df, aes(x = yob_qob, y = mean_s)) +
geom_point() + geom_line()
ggplot(df, aes(x = yob_qob, y = mean_s,
color = qob, shape = qob, group = NA)) +
geom_point() + geom_line()
df <- read_dta('datasets/ak_91_iv_qob.dta')
df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob))
ggplot(df, aes(x = yob_qob, y = mean_s,
color = qob, shape = qob, group = NA)) +
geom_point() + geom_line()
df <- read_dta('datasets/ak_91_iv_qob.dta')
df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob))
ggplot(df, aes(x = yob_qob, y = mean_s,
color = factor(qob), group = NA)) +
geom_point() + geom_line()
ggplot(df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob))) + geom_line()
ggplot(df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line()
ggplot(df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(text = qob))
ggplot(df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
ggplot(df, aes(x = yob_qob, y = mean_s, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob, color = factor(qob)))
head(df)
df <- read_dta('datasets/ak_91_iv_qob.dta')
head(df)
df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob),
mean_lw = mean(lnw))
df <- read_dta('datasets/ak_91_iv_qob.dta')
agg_df <- df %>%
unite(yob_qob, yob, qob, remove = F) %>%
group_by(yob_qob) %>%
summarise(mean_s = mean(s),
qob = mean(qob),
yob = mean(yob),
mean_lw = mean(lnw))
head(agg_df)
ggplot(agg_df, aes(x = yob_qob, y = mean_lw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
ggplot(agg_df, aes(x = yob, y = mean_lw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line() + geom_label(aes(label = qob))
ggplot(agg_df, aes(x = yob_qob, y = mean_lw, group = NA)) +
geom_point(aes(color = factor(qob)), size = 3) +
geom_line()
head(df)
year_df <- df %>%
group_by(s) %>%
summarise(mean_lw = mean(lnw))
nrow(year_df    )
ggplot(year_df, aes(x = s, y = mean_lw)) + geom_point() +
geom_line()
lm(lnw ~ s, data = df) %>% summary()
df <- read_dta('datasets/ak_91_iv_qob.dta') %>%
mutate(reg_wage = exp(lnw))
lm(reg_wage ~ s, data = df) %>% summary()
a <- lm(reg_wage ~ s, data = df)
plot(a)
a <- lm(reg_wage ~ s, data = df)
b <- lm(lnw ~ s, data = df)
plot(a, which = 1)
plot(b, which = 1)
summary(b)
summar(a)
summary(a)
qplot(a$fitted.values, a$residuals)
options(htmltools.dir.version = FALSE)
library(tidyverse)
df_educ <- data_frame(iq = runif(200, 1, 100),
school_years = 16 - 0.05*iq + rnorm(200),
income = 20000 + 5000*school_years + 5000*rnorm(200) + 500*iq)
summary(lm(income ~ school_years, data = df_educ))
summary(lm(income ~ school_years + iq, data = df_educ))
setwd("~/")
setwd("~/Dropbox/intro-ci-shortcourse/slides/part-02-biases")
?ivreg
?install.packages(AER)
install.packages("AER")
library(AER)
?ivreg
head(df)
options(htmltools.dir.version = FALSE)
reg1 <- lm(lnw ~ s + factor(yob), data = df)
summary(reg1)
reg1 <- lm(lnw ~ s, data = df)
summary(reg)
summary(reg1)
head(df)
df <- read_dta('datasets/ak_91_iv_qob.dta') %>%
mutate(yob = factor(yob))
df <- read_dta('../datasets/ak_91_iv_qob.dta') %>%
mutate(yob = factor(yob))
head(df)
df <- read_dta('../datasets/ak_91_iv_qob.dta') %>%
mutate(yob = factor(yob), sob = factor(sob))
reg1 <- lm(lnw ~ s + yob + sob, data = df)
unique(df$sob)
reg1 <- lm(lnw ~ s + yob + sob, data = df)
summary(reg1)
reg2 <- ivreg(lnw ~ yob + s | yob + qob, data = df)
summary(reg2)
df <- read_dta('../datasets/ak_91_iv_qob.dta') %>%
mutate(yob = factor(yob), sob = factor(sob),
q4 = ifelse(qob == 4, 1, 0))
reg1 <- lm(lnw ~ s + yob + q4, data = df)
summary(reg1)
reg2 <- ivreg(lnw ~ yob + s | yob + q4, data = df)
summary(reg2)
reg2 <- ivreg(lnw ~ s | qob, data = df)
summary(reg2)
reg2 <- ivreg(lnw ~ s + yob | yob + qob, data = df)
summary(reg2)
reg2 <- ivreg(lnw ~ s + yob + sob | yob + qob + sob, data = df)
summary(reg2)
